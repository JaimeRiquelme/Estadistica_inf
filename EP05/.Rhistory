#Cargamos los datos
datos <- read.csv("EP06 Datos")
#Cargamos los datos
datos <- read.csv("EP06 Datos.csv")
#Mostramos los primeros datos
head(datos)
View(datos)
View(datos)
View(datos)
datos_filtrados <- datos %>% filter(Area == "Economía")
library(dplyr)
datos_filtrados <- datos %>% filter(Area == "Economía")
library(dplyr)
datos_filtrados <- datos %>% filter(area == "Economía")
#Filtramos los datos
datos_filtrados <- datos %>% filter(area == "Economía")
#Mostramos los primeros datos
head(datos_filtrados)
#Seleccionamos las columnas que utilizaremos
datos_seleccionados <- datos_filtrados %>% select(id, dificultas, tiempo)
#Seleccionamos las columnas que utilizaremos
datos_seleccionados <- datos_filtrados %>% select(id, dificultad, tiempo)
#Seleccionamos las columnas que utilizaremos
datos_seleccionados <- datos_filtrados %>% select(id, dificultad, tiempo)
#Mostamos los primeros datos
head(datos_seleccionados)
library(ggpubr)
#Creamos al gráfico Q-Q
grafico1 <- ggqqplot(datos_seleccionados, x = "tiempo", y = "dificultad", color="dificultad",
ggtheme = theme_minimal())
#Mostramos el gráfico
print(grafico1)
library(ggpubr)
#Creamos al gráfico Q-Q
grafico1 <- ggqqplot(datos_seleccionados, x = "tiempo", y = "dificultad", color="dificultad"))
library(ggpubr)
#Creamos al gráfico Q-Q
grafico1 <- ggqqplot(datos_seleccionados, x = "tiempo", y = "dificultad", color="dificultad")
#Mostramos el gráfico
print(grafico1)
library(ggpubr)
#Creamos al gráfico Q-Q
grafico1 <- ggqqplot(datos_seleccionados, x = "tiempo", y = "dificultad", color="dificultad") +
facet_wrap(~dificultad) + rremove("x.ticks") + rremove("x.text") + rremove("y.text") + rremove("y.ticks") + rremove("axis.title")
#Mostramos el gráfico
print(grafico1)
#Seleccionamos las columnas que utilizaremos
datos_seleccionados <- datos_filtrados %>% select(id, dificultad, tiempo)
#Creamos los factores
datos_seleccionados[["id"]] <- factor(datos_seleccionados[["id"]])
datos_seleccionados[["dificultad"]] <- factor(datos_seleccionados[["dificultad"]], levels = c("Baja", "Media", "Alta")
#Mostamos los primeros datos
head(datos_seleccionados)
library(ggpubr)
#Creamos al gráfico Q-Q
grafico1 <- ggqqplot(datos_seleccionados, x = "tiempo", y = "dificultad", color="dificultad")
+facet_wrap(~dificultad)
#Seleccionamos las columnas que utilizaremos
datos_seleccionados <- datos_filtrados %>% select(id, dificultad, tiempo)
#Creamos los factores
datos_seleccionados[["id"]] <- factor(datos_seleccionados[["id"]])
datos_seleccionados[["dificultad"]] <- factor(datos_seleccionados[["dificultad"]],
levels = c("Baja", "Media", "Alta"))
#Mostamos los primeros datos
head(datos_seleccionados)
library(ggpubr)
#Creamos al gráfico Q-Q
grafico1 <- ggqqplot(datos_seleccionados, x = "tiempo", y = "dificultad", color="dificultad")
+facet_wrap(~dificultad)
library(ggpubr)
#Creamos al gráfico Q-Q
grafico1 <- ggqqplot(datos_seleccionados, x = "tiempo", y = "dificultad", color="dificultad")
+facet_wrap(~ dificultad)
library(ggpubr)
#Creamos al gráfico Q-Q
grafico1 <- ggqqplot(datos_seleccionados, x = "tiempo", y = "dificultad", color="dificultad")
+ facet_wrap(~ dificultad)
library(ggpubr)
#Creamos al gráfico Q-Q
grafico1 <- ggqqplot(datos_seleccionados, x = "tiempo", y = "dificultad", color="dificultad") + facet_wrap(~ dificultad) + rremove("x.ticks") + rremove("x.text") + rremove("y.text") + rremove("y.ticks") + rremove("axis.title")
#Mostramos el gráfico
print(grafico1)
#Realizamos la prueba de ANOVA
library(ez)
Prueba_ezanova <- (data = datos_seleccionados, dv = tiempo, within = dificultad, wid = id, return_aov = TRUE)
#Realizamos la prueba de ANOVA
library(ez)
Prueba_ezanova <- ezANOVA(data = datos_seleccionados, dv = tiempo, within = dificultad, wid = id, return_aov = TRUE)
#Realizamos la prueba de ANOVA
library(ez)
Prueba_ezanova <- ezANOVA(data = datos_seleccionados, dv = tiempo, within = dificultad, wid = id, return_aov = TRUE)
#Mostramos los resultados
print(Prueba_ezanova)
#Cargamos las librerias
library(nlme)
library(emmeans)
#Cargamos las librerias
library(nlme)
library(emmeans)
#Realizamos el modelo mixto
mixto <- lme(tiempo ~ dificultad, data = datos_seleccionados, random = ~1|id)
#Estimamos las medias
medias = emmeans(mixto, "dificultad")
#Realizamos la prueba de Tukey
Prueba_Tukey <- pairs(medias, adjust = "tukey")
print(Prueba_Tukey)
